version: '3.8'

volumes:
    rabbitmq_data:

services:
    ##################################
    # RabbitMQ: The messaging broker #
    ##################################
    rabbitmq:
        image: rabbitmq:3-management
        hostname: camel-rabbitmq
        restart: always
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes: 
            - rabbitmq_data:/var/lib/rabbitmq

    send_sms:
        build:
            context: ./
            dockerfile: send_sms.Dockerfile
        image: 889090/send_sms:2.1
        restart: always
        depends_on:
            - rabbitmq
            - activity
        environment:
            rabbit_host: camel-rabbitmq
            rabbit_port: 5672
            PYTHONUNBUFFERED: 1
        ports:
            - "5566:5566"
    #Order: 5000
    order:
        build:
            context: ./
            dockerfile: order.Dockerfile
        image: 889090/order:1.0
        restart: always
        environment:
            dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/camelDB
        ports:
            - "5000:5000"

    #####################################################
    # Activity: The Activity Log Consumber microservice #
    #####################################################
    activity:
        build:
            context: ./
            dockerfile: activity.Dockerfile
        image: 889090/activity:1.0
        restart: always
        depends_on:
            - rabbitmq
        environment:
            rabbit_host: camel-rabbitmq
            rabbit_port: 5672
            dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/camelDB
            PYTHONUNBUFFERED: 1

    #Activity: 5001
    #########################################################
    # Activityhttp: The Activity Log Consumber microservice #
    #########################################################
    activityhttp:
        build:
            context: ./
            dockerfile: activityhttp.Dockerfile
        image: 889090/activityhttp:1.0
        restart: always
        environment:
            dbURL: 'mysql+mysqlconnector://is213@host.docker.internal:3306/camelDB'
            PYTHONUNBUFFERED: 1
        ports:
            - "5001:5001"
    #Shipper: 5002
    shipper:
        build:
            context: ./
            dockerfile: shipper.Dockerfile
        image: 889090/shipper:1.0
        restart: always
        environment:
            dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/camelDB
        ports:
            - "5002:5002"
    
    #Rate: 5003
    rate:
        build:
            context: ./
            dockerfile: rate.Dockerfile
        image: 889090/rate:1.0
        restart: always
        environment:
            dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/camelDB
        ports:
            - "5003:5003"

    #DropPoint: 5004
    droppoint:
        build:
            context: ./
            dockerfile: droppoint.Dockerfile
        image: 889090/droppoint:1.0
        restart: always
        environment:
            dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/camelDB
        ports:
            - "5004:5004"

    #Valuing: 5005
    valuing:
        build:
            context: ./
            dockerfile: valuing.Dockerfile
        image: 889090/valuing:1.0
        restart: always
        depends_on:
            - order
            - rate
        environment:
            order_URL: http://order:5000/order
            rate_URL: http://rate:5003/rate
        ports:
            - "5005:5005"
    
    #PickParcel: 5006
    ###########################################################
    # Pick Parcel: Picking parcel drop-off point microservice #
    ###########################################################
    pick_parcel:
        build:
            context: ./
            dockerfile: pick_parcel.Dockerfile
        image: 889090/pick_parcel:1.0
        restart: always
        depends_on:
            - droppoint
            - order
            - shipper
            - email
            - activity
            - rabbitmq
        environment:
            rabbit_host: camel-rabbitmq
            rabbit_port: 5672
            # Links to be updated
            order_URL: "http://order:5000/order"
            shipper_URL: "http://shipper:5002/shipper"
            # droppoint_URL: "http://localhost:5004/droppoint"
            # email_URL: "http://localhost:9000/email"
            PYTHONUNBUFFERED: 1
        ports:
            - "5006:5006"


    #Create Order: 5007
    create_order:
        build:
            context: ./
            dockerfile: create_order.Dockerfile
        image: 889090/create_order:1.0
        restart: always
        depends_on:
            - activity
            - order
            - shipper
            - send_sms
            - email
            - rabbitmq
        environment:
            rabbit_host: camel-rabbitmq
            rabbit_port: 5672
            order_URL: http://order:5000/order
            shipper_URL: http://shipper:5002/shipper
            PYTHONUNBUFFERED: 1
        ports:
            - "5007:5007"

    #update_order: 5008
    update_order:
        build:
            context: ./
            # To add create_order.Dockerfile
            dockerfile: update_order.Dockerfile
        image: 889090/update_order:1.0
        restart: always
        depends_on:
            - order
            - activity
            - rabbitmq
            - send_sms
            - email
        environment:
            rabbit_host: camel-rabbitmq
            rabbit_port: 5672
            order_URL: http://order:5000/order
            shipper_URL: http://shipper:5002/shipper
        ports:
            - "5008:5008"

    cancel_order:
        build:
            context: ./
            # To add create_order.Dockerfile
            dockerfile: cancel_order.Dockerfile
        image: 889090/cancel_order:1.0
        restart: always
        depends_on:
            - order
            - activity
            - rabbitmq
            - send_sms
            - email
        environment:
            rabbit_host: camel-rabbitmq
            rabbit_port: 5672
            order_URL: http://order:5000/order
            shipper_URL: http://shipper:5002/shipper
        ports:
            - "5009:5009"

    #AcceptDelivery: 5009
    #Email: 9000
    email:
        build:
            context: ./
            # To add create_order.Dockerfile
            dockerfile: email.Dockerfile
        image: 889090/email_test:1.0
        restart: always
        depends_on:
            - rabbitmq
            - activity
        environment:
            rabbit_host: camel-rabbitmq
            rabbit_port: 5672
        ports:
            - "9000:9000"

networks:
    rabbitmq_go_net:
        driver: bridge

    #Sms: 5566
    # sendgrid
    # sendgrid:
    #     # build:
    #     #     context: ./
    #     image: sendgrid/sendgrid-python
    #     restart: always
    #     ports:
    #         - "5011:5011"
    #rabbitmq
    # rabbitmq:
    #     image: rabbitmq:3-management-alpine
    #     container_name: 'rabbitmq'
    #     ports:
    #         - 5672:5672
    #         - 15672:15672
    #     volumes:
    #         - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
    #         - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    #     networks:
    #         - rabbitmq_go_net
    # rabbitmq:
    #     container_name: "rabbitmq"
    #     image: rabbitmq:3.8-management-alpine
    #     environment:
    #         - RABBITMQ_DEFAULT_USER=guest
    #         - RABBITMQ_DEFAULT_PASS=guest
    #     ports:
    #         # AMQP protocol port
    #         - '5672:5672'
    #         # HTTP management UI
    #         - '15672:15672'
    # phpDB:
    #     image: mysql:8.0.0
    #     container_name: mysql8
    #     environment:
    #     MYSQL_DATABASE: camelDB
    #     MYSQL_USER: is213
    #     volumes:
    #         - datafiles:/var/lib/mysql
    #     restart: always
    #     ports:
    #         - "9906:3306"

    # droppoint_php:
    #     container_name: droppointphp
    #     build:
    #     context: .
    #     dockerfile: camelcourier/droppointPHP.Dockerfile
    #     environment:
    #         - MYSQL_DBHOST=phpDB
    #         - MYSQL_DBPORT=9906
    #         - MYSQL_DBUSER=is213
    #         - MYSQL_DBNAME=camelDB
    #     ports:
    #         - 8080:80
    #         - 8083:443
    #     depends_on:
    #         - phpDB
    #     stdin_open: true
    #     tty: true
